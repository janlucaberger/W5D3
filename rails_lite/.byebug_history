c
JSON.parse(req.cookies["_rails_lite_app_flash"])[key]
c
req.cookies["_rails_lite_app_flash"]
req.cookies["_rails_lite_app_flash"][key]
c
req.cookies
req
@flash
c
cc
@flash
c
@flash
c
@flash
c
params
c
match_data.names
match_data[:id]
match_data
p match_data.keys
p match_data.all
p match_data
match_data
c
match_data
c
params
c
req.path
c
req.fullpath
req.path
req.path_info
req.path
c
pattern.to_s[/\<.*?\>/].slice(1...-1)
pattern.to_s[/\<.*?\>/].slice(1..-1)
pattern.to_s[/\<.*?\>/].slice(1)
pattern.to_s[/\<.*?\>/]
pattern.to_s[/\<.*?\>/].slice(1,-1)
c
pattern.to_s[/\<.*?\>/]
pattern.class
pattern[/\<.*?\>/]
_[/\<.*?\>/]
pattern
c
n
c
\[(.*?)\]
@pattern
req.path
res
req
c
&proc
@routes
res
req
proc
c
route.matches?(req)
req.path
@routes
c
@routes
c
@routes
c
routc
route
c
route.
route.pattern
route
c
req.path
req
c
res
req.path
req
c
req.path
req
res
req
c
@controller_class
@contoller_class
c
c\
@http_method
@pattern
res
req
c
@pattern
c
self
c
self
req
c
cats_controller.session['test_key'] = 'test_value'
cookie['Set-Cookie']
cookie
c
session
c
@req.cookies[@app]
c
@req.cookies
JSON.parse(@req.cookies[@app])
c
@app
req
c
@cookie[
c
attribuc
attributes
c
v
@cookie
c
cookie[key]
cookie[key
c
JSON.parse(@req.cookies["_rails_lite_app"])
@req.cookies["_rails_lite_app"][key]
@req.cookies["_rails_lite_app"]
key
c
cookie
c
@cookie
c
req.cookies["_rails_lite_app"]
req.cookies
exit
req.cookies?
req.cookies
self
c
req.cookies
res
req
self
c
res.cookies
req.cookies
res.cookie
res.cookies
res
req
res
self
c
self
exit
c
template
c
template
c
file
c
template_name.to_s
self.class.to_s.split("Controller")[0].downcase
self.class.to_s.split("Controller").downcase
self.class.to_s.split("Controller")
self.class.split("Controller")
self.class
params
self
template_name
c
self
params
req
res
self
